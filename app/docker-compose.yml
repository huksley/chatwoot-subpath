version: "3"

x-base: &base
    image: chatwoot/chatwoot:${CHATWOOT_VERSION:-v4.0.1-ce}
    env_file: .env ## Change this file for customized env variables
    volumes:
      - ./data/storage:/app/storage
      - ./data/tmp:/app/tmp

services:
  rails:
    <<: *base
    depends_on:
      - postgres
      - redis
    user: "$USER_UID:$USER_GID"
    ports:
      - "127.0.0.1:$PORT:3000"
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    # This tries to update gemlock but we are running as non root so it is not possible
    # entrypoint: docker/entrypoints/rails.sh
    command: ["bundle", "exec", "rails", "s", "-p", "3000", "-b", "0.0.0.0"]
    restart: always

  sidekiq:
    <<: *base
    depends_on:
      - postgres
      - redis
    user: "$USER_UID:$USER_GID"
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    command: ["bundle", "exec", "sidekiq", "-C", "config/sidekiq.yml"]
    restart: always

  postgres:
    image: pgvector/pgvector:pg16
    restart: always
    # We definitely not doing this, but something changes ownership of PG files
    user: "$USER_UID:$USER_GID"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chatwoot
      - POSTGRES_USER=postgres
      # Please provide your own password.
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  redis:
    image: redis:alpine
    restart: always
    command: ["sh", "-c", 'redis-server --requirepass "$REDIS_PASSWORD"']
    env_file: .env
    volumes:
      - ./data/redis:/data
